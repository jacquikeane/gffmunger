#!/usr/bin/env python3

import argparse
import sys
import os
import pkg_resources

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.dirname(os.path.abspath(__file__))+'/..')

from gffmunger.GFFMunger import GFFMunger
from gffmunger.InputTypes import InputTypes

version = ''
try:
	version = pkg_resources.get_distribution("gffmunger").version
except pkg_resources.DistributionNotFound:
	version = '0.0.1'

config_filename = os.path.normpath(os.path.join(os.path.dirname(os.path.realpath(__file__)),'..','config.yml'))

parser = argparse.ArgumentParser(   description = 'A munger of GFF files.  Proper description to follow.',
                                    usage       = __file__+' [options]', formatter_class=argparse.ArgumentDefaultsHelpFormatter
                                    )
parser.add_argument('--verbose',             action='store_true',    default = False,              help = 'Turn on debugging [%(default)s]')
parser.add_argument('--quiet', '-q',         action='store_true',    default = False,              help = 'Suppress messages & warnings [%(default)s]')
parser.add_argument('--no-validate', '-n',   action='store_true',    default = False,              help = 'Do not validate the input GFF3 [%(default)s]')
parser.add_argument('--force', '-f',         action='store_true',    default = False,              help = 'Force writing of output file, even if it already exists [%(default)s]')
parser.add_argument('--fasta-file', '-a',    type=str,                                             help = 'Read FASTA from separate file instead of GFF3 input')
parser.add_argument('--input-file', '-i',    type=str,                                             help = 'Read GFF3 from file instead of STDIN')
parser.add_argument('--output-file', '-o',   type=str,                                             help = 'Write GFF3 to file instead of STDOUT')
parser.add_argument('--config',  '-c',       type=str,               default = config_filename,    help = 'Config file [%(default)s]')
parser.add_argument('--version',             action='version',       version = str(version),       help = 'Print version and exit')

options = parser.parse_args()

munger = GFFMunger(options)
munger.run()
