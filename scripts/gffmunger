#!/usr/bin/env python3

import argparse
import sys
import os
import pkg_resources

sys.path.append(os.path.dirname(os.path.abspath(__file__)))
sys.path.append(os.path.dirname(os.path.abspath(__file__))+'/..')

from gffmunger.GFFMunger import GFFMunger
from gffmunger.InputTypes import InputTypes

version = ''
try:
	version = pkg_resources.get_distribution("gffmunger").version
except pkg_resources.DistributionNotFound:
	version = '0.0.2'

# looking for this file
config_filename = 'gffmunger-config.yml'
# first check under sys.prefix (will be here if installed with pip)
config_sys_path = os.path.join(sys.prefix,'config')
config_file_path = None
if os.path.exists(config_sys_path):
   config_file_path = os.path.join(config_sys_path,config_filename)
# no joy, then look in gffmunger home directory (will be here if cloned from git)
if config_file_path is None or not os.path.exists(config_file_path):
   config_file_path = os.path.normpath(os.path.join(os.path.dirname(os.path.realpath(__file__)),'..',config_filename))

parser = argparse.ArgumentParser(   description       = "Munges GFF files. Use one or more of the following commands:\n"# 80 chars --->|
                                                      + "  move_polypeptide_annot  transfer annotations from polypeptides to the\n"
                                                      + "                          feature (e.g. mRNA) they derive from\n"
                                                      + "  null                    do nothing\n",
                                    #usage             = __file__+' [command1 .. commandN] [options]',
                                    #formatter_class   = argparse.ArgumentDefaultsHelpFormatter,
                                    formatter_class   = argparse.RawTextHelpFormatter
                                    )

parser.add_argument('commands',  default = ['move_polypeptide_annot'],  metavar='command',   type=str,   nargs='*',  help  = "Command(s) defining how the GFF should be munged")

parser.add_argument('--verbose',             action='store_true',    default = False,              help = 'Turn on debugging [%(default)s]')
parser.add_argument('--quiet', '-q',         action='store_true',    default = False,              help = 'Suppress messages & warnings [%(default)s]')
parser.add_argument('--no-validate', '-n',   action='store_true',    default = False,              help = 'Do not validate the input GFF3 [%(default)s]')
parser.add_argument('--force', '-f',         action='store_true',    default = False,              help = 'Force writing of output file, even if it already exists [%(default)s]')
parser.add_argument('--fasta-file', '-a',    type=str,                                             help = 'Read FASTA from separate file instead of GFF3 input')
parser.add_argument('--input-file', '-i',    type=str,                                             help = 'Read GFF3 from file instead of STDIN')
parser.add_argument('--output-file', '-o',   type=str,                                             help = 'Write GFF3 to file instead of STDOUT')
parser.add_argument('--config',  '-c',       type=str,               default = config_file_path,   help = 'Config file [%(default)s]')
parser.add_argument('--genometools', '-g',   type=str,                                             help = 'genometools path (override path in config)')
parser.add_argument('--version',             action='version',       version = str(version),       help = 'Print version and exit')

options = parser.parse_args()

munger = GFFMunger(options)
munger.run()
